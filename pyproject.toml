[project]
requires-python = ">=3.6"
name = "pyppmd"
description = "PPMd compression/decompression library"
readme = "README.rst"
long_description = {file = "README.rst"}
long_description_content_type = "text/x-rst"
keywords = ["ppmd", "7-zip", "compression"]
license = {file = "LICENSE.rst"}
authors = [
    {email = "miurahar@linux.com"},
    {name = "Hirohsi Miura"}
]
classifiers = [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
      "setuptools-scm>=6.0.1",
      "setuptools>=45.0"
]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0.1"]
build-backend = "setuptools.build_meta"

[project.urls]
homepage = "http://github.com/miurahr/pyppmd"
documentation = "pyppmd.readthedocs.org"
repository = "github.com"
changelog = "github.com/miurahr/pyppmd/blob/master/Changelog.rst"

[project.optional-dependencies]
test = [
      "pytest>=6.0",
      "pytest-benchmark",
      "pytest-cov",
      "pytest-timeout",
      "hypothesis",
      "coverage[toml]>=5.2"
]
check = [
      "mypy>=0.812",
      "mypy_extensions>=0.4.3",
      "check-manifest",
      "flake8",
      "flake8-black",
      "readme-renderer",
      "pygments",
      "isort>=5.0.3"
]
docs = [
      "sphinx>=2.3",
      "sphinx_rtd_theme"
]
fuzzer = [
      "atheris",
      "hypothesis"
]

[tools.setuptools_scm]
local_scheme = "no-local-version"

[tool.black]
line-length = 125
target-version = ['py38']

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]
ignore_errors = true

[tool.mypy]
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = false
strict_optional = true
show_column_numbers = true
files = "*.py"

[tool.isort]
known_first_party = ["pyppmd", "_ppmd"]
known_third_party = ["docutils","flake8","pyannotate_runtime","pytest","pytz","setuptools","sphinx","yaml"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 125

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = "test*.py"
norecursedirs = [".git", "_build", "tmp", ".eggs"]

[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux2014"
manylinux-i686-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_i686-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_1"
musllinux-i686-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"

[tool.cibuildwheel.linux]
archs = ["auto", "aarch64"]

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = check, py{36,37,38,39,310}, pypy3, docs, coveralls

[testenv]
passenv = TRAVIS TRAVIS_* APPVEYOR APPVEYOR_* GITHUB_* PYTEST_ADDOPTS COVERALLS_*
extras = test
commands =
    python -m pytest -vv -s

[testenv:check]
basepython = python3.8
extras = check
ignore_errors=true
commands =
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --quiet --check-only --diff src tests setup.py

[testenv:docs]
basepython = python3.8
extras = docs
commands =
    sphinx-build {posargs:-E} -b html docs build/html

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38, check, docs
    3.9: py39
    3.10: py310
    pypy-3: pypy3
"""