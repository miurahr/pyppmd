# Automatically build binary wheels and source packages.
name: cibuildwheel

on:
  push:
    branches:
      - main
      - releases/*
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CIBW_ARCHS_LINUX: "auto"
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
      # Include latest Python beta
      CIBW_PRERELEASE_PYTHONS: True
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 20
      - name: Fetch release tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python üêç
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Update pip
        run: python -m pip install -U pip setuptools setuptools_scm[toml]
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        with:
          output-dir: wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: ppmd-files
          path: |
            wheelhouse/*.whl


  build_wheels_on_linux_arm64:
    name: Build wheels for linux arm64
    runs-on: ubuntu-latest
    env:
      CIBW_ARCHS_LINUX: "aarch64"
      CIBW_SKIP: "*-musllinux*"
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 20
      - name: Fetch release tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python üêç
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Update pip
        run: python -m pip install -U pip
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        with:
          output-dir: wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: ppmd-files
          path: |
            wheelhouse/*.whl


  # Build source distribution & manylinux1_x86_64
  build_in_manylinux2010:
    name: Build in manylinux2010 environment
    runs-on: ubuntu-latest

    env:
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
      CIBW_ARCHS_LINUX: x86_64
      CIBW_SKIP: pp*

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 20
      - name: Fetch release tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python üêç
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Update pip
        run: python -m pip install -U pip setuptools setuptools_scm[toml] build
      - name: Build source distribution
        run: python -m build --sdist
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        with:
          output-dir: wheelhouse
      - name: Upload source distribution
        uses: actions/upload-artifact@v3
        with:
          name: ppmd-files
          path: dist/*.tar.gz
      - name: Upload manylinux1_x86_64
        uses: actions/upload-artifact@v3
        with:
          name: ppmd-files
          path: |
            wheelhouse/*.whl

  # Upload to PyPI
  upload_pypi:
    name: Publish to PyPI
    needs:
      - build_wheels
      - build_wheels_on_linux_arm64
      - build_in_manylinux2010
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ppmd-files
          path: dist
      - name: Publish distribution üì¶ to Test PyPI
        if: startsWith(github.event.ref, 'refs/heads/releases')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
          verbose: true
      - name: Publish distribution üì¶ to PyPI
        if: startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          skip_existing: true
          verbose: true
